using Library.DataAccess;
using Library.WebCore;
using Nc.Erp.WorksSupport.Do.Configuration.WorksSupport;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nc.Erp.WorksSupport.Da.Configuration.WorksSupport
{
    /// <summary>
    /// Created by 		: Luong Trung Nhan  
    /// Created date 	: 15/06/2017
    /// Danh sách file đính kèm của công việc cần hỗ trợ
    /// </summary>	
    public class DaWorksSupport_Attachment
    {
        #region Methods			
		

		/// <summary>
		/// Nạp thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objWorksSupport_Attachment">Đối tượng trả về</param>
		/// <returns>Kết quả trả về</returns>
        public ResultMessage LoadInfo(ref List<WorksSupport_Attachment> lstWorksSupport_Attachment, int intWorksSupportID, IData objIData)
		{
			ResultMessage objResultMessage = new ResultMessage();
            //IData objIData = Library.DataAccess.Data.CreateData();
			try 
			{
                //objIData.Connect();
				objIData.CreateNewStoredProcedure(SP_SELECT);
                objIData.AddParameter("@" + WorksSupport_Attachment.colWorksSupportID, intWorksSupportID);
				IDataReader reader = objIData.ExecStoreToDataReader();
                WorksSupport_Attachment objWorksSupport_Attachment;
				while (reader.Read())
 				{
 					objWorksSupport_Attachment = new WorksSupport_Attachment();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colAttachmentID])) objWorksSupport_Attachment.AttachmentID = Convert.ToString(reader[WorksSupport_Attachment.colAttachmentID]).Trim();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colWorksSupportID])) objWorksSupport_Attachment.WorksSupportID = Convert.ToDecimal(reader[WorksSupport_Attachment.colWorksSupportID]);
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colFilePath])) objWorksSupport_Attachment.FilePath = Convert.ToString(reader[WorksSupport_Attachment.colFilePath]).Trim();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colFileName])) objWorksSupport_Attachment.FileName = Convert.ToString(reader[WorksSupport_Attachment.colFileName]).Trim();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colCreatedUser])) objWorksSupport_Attachment.CreatedUser = Convert.ToString(reader[WorksSupport_Attachment.colCreatedUser]).Trim();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colCreatedDate])) objWorksSupport_Attachment.CreatedDate = Convert.ToDateTime(reader[WorksSupport_Attachment.colCreatedDate]);
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colIsDeleted])) objWorksSupport_Attachment.IsDeleted = Convert.ToBoolean(reader[WorksSupport_Attachment.colIsDeleted]);
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colDeletedUser])) objWorksSupport_Attachment.DeletedUser = Convert.ToString(reader[WorksSupport_Attachment.colDeletedUser]).Trim();
 					if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colDeletedDate])) objWorksSupport_Attachment.DeletedDate = Convert.ToDateTime(reader[WorksSupport_Attachment.colDeletedDate]);
 				    lstWorksSupport_Attachment.Add(objWorksSupport_Attachment);
                }
				reader.Close();
			}
			catch (Exception objEx)
			{
				objResultMessage = new ResultMessage(true, Library.WebCore.SystemError.ErrorTypes.LoadInfo, "Lỗi nạp thông tin danh sách file đính kèm của công việc cần hỗ trợ", objEx.ToString());
				ErrorLog.Add(objIData, objResultMessage.Message, objResultMessage.MessageDetail, "DA_WorksSupport_Attachment -> LoadInfo", Globals.ModuleName);
				return objResultMessage;
			}
			finally
    		{
                //objIData.Disconnect();
    		}
    		return objResultMessage;
		}

		/// <summary>
		/// Thêm thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
        public ResultMessage Insert(WorksSupport_Attachment objWorksSupport_Attachment, IData objIData)
		{
			ResultMessage objResultMessage = new ResultMessage();
            //IData objIData = Library.DataAccess.Data.CreateData();
			try 
			{
                //objIData.Connect();
				Insert(objIData, objWorksSupport_Attachment);
			}
			catch (Exception objEx)
			{
				objResultMessage = new ResultMessage(true, Library.WebCore.SystemError.ErrorTypes.Insert, "Lỗi thêm thông tin danh sách file đính kèm của công việc cần hỗ trợ", objEx.ToString());
				ErrorLog.Add(objIData, objResultMessage.Message, objResultMessage.MessageDetail, "DA_WorksSupport_Attachment -> Insert", Globals.ModuleName);
				return objResultMessage;
			}
			finally
    		{
                //objIData.Disconnect();
    		}
    		return objResultMessage;
		}


		/// <summary>
		/// Thêm thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objIData">Đối tượng Kết nối CSDL</param>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
		public void Insert(IData objIData, WorksSupport_Attachment objWorksSupport_Attachment)
		{
			try 
			{
				objIData.CreateNewStoredProcedure(SP_ADD);
				objIData.AddParameter("@" + WorksSupport_Attachment.colWorksSupportID, objWorksSupport_Attachment.WorksSupportID);
				objIData.AddParameter("@" + WorksSupport_Attachment.colFilePath, objWorksSupport_Attachment.FilePath);
				objIData.AddParameter("@" + WorksSupport_Attachment.colFileName, objWorksSupport_Attachment.FileName);
				objIData.AddParameter("@" + WorksSupport_Attachment.colCreatedUser, objWorksSupport_Attachment.CreatedUser);
                objIData.AddParameter("@FILEID", objWorksSupport_Attachment.FileID);
                objIData.ExecNonQuery();
			}
			catch (Exception objEx)
			{
				objIData.RollBackTransaction();
				throw (objEx);
			}
		}


		/// <summary>
		/// Cập nhật thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
		public ResultMessage Update(WorksSupport_Attachment objWorksSupport_Attachment)
		{
			ResultMessage objResultMessage = new ResultMessage();
			IData objIData = Library.DataAccess.Data.CreateData();
			try 
			{
				objIData.Connect();
				Update(objIData, objWorksSupport_Attachment);
			}
			catch (Exception objEx)
			{
				objResultMessage = new ResultMessage(true, Library.WebCore.SystemError.ErrorTypes.Update, "Lỗi cập nhật thông tin danh sách file đính kèm của công việc cần hỗ trợ", objEx.ToString());
				ErrorLog.Add(objIData, objResultMessage.Message, objResultMessage.MessageDetail, "DA_WorksSupport_Attachment -> Update", Globals.ModuleName);
				return objResultMessage;
			}
			finally
    		{
        		objIData.Disconnect();
    		}
    		return objResultMessage;
		}


		/// <summary>
		/// Cập nhật thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objIData">Đối tượng Kết nối CSDL</param>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
		public void Update(IData objIData, WorksSupport_Attachment objWorksSupport_Attachment)
		{
			try 
			{
				objIData.CreateNewStoredProcedure(SP_UPDATE);
				objIData.AddParameter("@" + WorksSupport_Attachment.colAttachmentID, objWorksSupport_Attachment.AttachmentID);
				objIData.AddParameter("@" + WorksSupport_Attachment.colWorksSupportID, objWorksSupport_Attachment.WorksSupportID);
				objIData.AddParameter("@" + WorksSupport_Attachment.colFilePath, objWorksSupport_Attachment.FilePath);
				objIData.AddParameter("@" + WorksSupport_Attachment.colFileName, objWorksSupport_Attachment.FileName);
                objIData.ExecNonQuery();
			}
			catch (Exception objEx)
			{
				objIData.RollBackTransaction();
				throw (objEx);
			}
		}


		/// <summary>
		/// Xóa thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
        public ResultMessage Delete(WorksSupport_Attachment objWorksSupport_Attachment, IData objIData)
		{
			ResultMessage objResultMessage = new ResultMessage();
            //IData objIData = Library.DataAccess.Data.CreateData();
			try 
			{
                        Delete(objIData, objWorksSupport_Attachment);
			}
			catch (Exception objEx)
			{
				objResultMessage = new ResultMessage(true, Library.WebCore.SystemError.ErrorTypes.Delete, "Lỗi xóa thông tin danh sách file đính kèm của công việc cần hỗ trợ", objEx.ToString());
				ErrorLog.Add(objIData, objResultMessage.Message, objResultMessage.MessageDetail, "DA_WorksSupport_Attachment -> Delete", Globals.ModuleName);
				return objResultMessage;
			}
			finally
    		{
                //objIData.Disconnect();
    		}
    		return objResultMessage;
		}


		/// <summary>
		/// Xóa thông tin danh sách file đính kèm của công việc cần hỗ trợ
		/// </summary>
		/// <param name="objIData">Đối tượng Kết nối CSDL</param>
		/// <param name="objWorksSupport_Attachment">Đối tượng truyền vào</param>
		/// <returns>Kết quả trả về</returns>
		private void Delete(IData objIData, WorksSupport_Attachment objWorksSupport_Attachment)
		{
			try 
			{
				objIData.CreateNewStoredProcedure(SP_DELETE);
				objIData.AddParameter("@" + WorksSupport_Attachment.colWorksSupportID, objWorksSupport_Attachment.WorksSupportID);
				objIData.AddParameter("@" + WorksSupport_Attachment.colDeletedUser, objWorksSupport_Attachment.DeletedUser);
 				objIData.ExecNonQuery();
			}
			catch (Exception objEx)
			{
				objIData.RollBackTransaction();
				throw (objEx);
			}
		}

        public List<WorksSupport_Attachment> GetWSAttachmentByWSID(decimal decWorksSupportID)
        {
            List<WorksSupport_Attachment> objWorksSupport_AttachmentLst = new List<WorksSupport_Attachment>();
            ResultMessage objResultMessage = new ResultMessage();
            IData objIData = Library.DataAccess.Data.CreateData();
            try
            {
                objIData.Connect();
                objIData.CreateNewStoredProcedure("EO_WORKSSUPPORT_AT_BYWSID_BETA");
                objIData.AddParameter("@" + WorksSupport_Attachment.colWorksSupportID, decWorksSupportID);
                IDataReader reader = objIData.ExecStoreToDataReader();
                WorksSupport_Attachment objWorksSupport_Attachment;
                while (reader.Read())
                {
                    objWorksSupport_Attachment = new WorksSupport_Attachment();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colAttachmentID])) objWorksSupport_Attachment.AttachmentID = Convert.ToString(reader[WorksSupport_Attachment.colAttachmentID]).Trim();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colWorksSupportID])) objWorksSupport_Attachment.WorksSupportID = Convert.ToDecimal(reader[WorksSupport_Attachment.colWorksSupportID]);
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colFilePath])) objWorksSupport_Attachment.FilePath = Convert.ToString(reader[WorksSupport_Attachment.colFilePath]).Trim();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colFileName])) objWorksSupport_Attachment.FileName = Convert.ToString(reader[WorksSupport_Attachment.colFileName]).Trim();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colCreatedUser])) objWorksSupport_Attachment.CreatedUser = Convert.ToString(reader[WorksSupport_Attachment.colCreatedUser]).Trim();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colCreatedDate])) objWorksSupport_Attachment.CreatedDate = Convert.ToDateTime(reader[WorksSupport_Attachment.colCreatedDate]);
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colIsDeleted])) objWorksSupport_Attachment.IsDeleted = Convert.ToBoolean(reader[WorksSupport_Attachment.colIsDeleted]);
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colDeletedUser])) objWorksSupport_Attachment.DeletedUser = Convert.ToString(reader[WorksSupport_Attachment.colDeletedUser]).Trim();
                    if (!Convert.IsDBNull(reader[WorksSupport_Attachment.colDeletedDate])) objWorksSupport_Attachment.DeletedDate = Convert.ToDateTime(reader[WorksSupport_Attachment.colDeletedDate]);
                    if (!Convert.IsDBNull(reader["FILEID"])) objWorksSupport_Attachment.FileID = Convert.ToString(reader["FILEID"]);
                    objWorksSupport_AttachmentLst.Add(objWorksSupport_Attachment);
                }
                reader.Close();
            }
            catch (Exception objEx)
            {
                objResultMessage = new ResultMessage(true, Library.WebCore.SystemError.ErrorTypes.LoadInfo, "Lỗi nạp thông tin danh sách file đính kèm của công việc cần hỗ trợ", objEx.ToString());
                ErrorLog.Add(objIData, objResultMessage.Message, objResultMessage.MessageDetail, "DA_WorksSupport_Attachment -> GetWSAttachmentByWSID", Globals.ModuleName);
                return null;
            }
            finally
            {
                objIData.Disconnect();
            }
            return objWorksSupport_AttachmentLst;
        }


		#endregion

		#region Constructor

		public DaWorksSupport_Attachment()
		{
		}
		#endregion

		#region Stored Procedure Names

        public const String SP_ADD = "EO_WORKSSUPPORT_V2_ATT_ADD";
		public const String SP_UPDATE = "WORKSSUPPORT_ATTACHMENT_UPD";
        public const String SP_DELETE = "WORKSSUPPORT_ATTACHMENT_DEL";
        public const String SP_SELECT = "WORKSSUPPORT_ATTACHMENT_SEL";
		public const String SP_SEARCH = "WORKSSUPPORT_ATTACHMENT_SRH";
		public const String SP_UPDATEINDEX = "WORKSSUPPORT_ATTACHMENT_UPDINDEX";
		#endregion

    }
}
