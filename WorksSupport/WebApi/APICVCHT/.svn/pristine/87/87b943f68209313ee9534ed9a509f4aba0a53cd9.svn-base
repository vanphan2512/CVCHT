using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;
using Nc.Erp.WorksSupport.Api.Common;
using Nc.Erp.WorksSupport.Api.Controllers;
using Nc.Erp.WorksSupport.Api.Models;
using Nc.Erp.WorksSupport.Api.Providers;

namespace Nc.Erp.WorksSupport.Api.Features.WorksSupport
{
    [RoutePrefix("api/v2/files")]
    public class FileController : BaseController
    {
        [HttpGet]
        [Route("{id}/thumbnail/{size?}")]
        public HttpResponseMessage CreateThumbnail(Guid id, ThumbnailSize size = ThumbnailSize.Medium)
        {
//            IFileService service = IoC.Container.Resolve<IFileService>();
//            Bitmap bitmap = service.GetThumbnail(id, size);
//            byte[] imageContent = ImageHelper.GetContent(bitmap);
//
//            MemoryStream ms = new MemoryStream(imageContent);
//            HttpResponseMessage response = new HttpResponseMessage(HttpStatusCode.OK);
//            response.Content = new StreamContent(ms);
//            response.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("image/png");
//            return response;
            return null;
        }

        [HttpPost]
        [Route("")]
        public async Task<Response<FileUpload>> UploadFile()
        {
            MultipartFormDataMemoryStreamProvider provider = new MultipartFormDataMemoryStreamProvider();
            await Request.Content.ReadAsMultipartAsync(provider);

//            IResponseData<IList<FileUploadResponse>> response = new ResponseData<IList<FileUploadResponse>>();
            try
            {
//                IFileService service = IoC.Container.Resolve<IFileService>();
//                IList<FileUploadResponse> fileUploadResponse = service.UploadFiles(provider.FileData);
//                response.SetData(fileUploadResponse);
            }
            catch (ValidationException ex)
            {
//                response.SetErrors(ex.Value);
//                response.SetStatus(System.Net.HttpStatusCode.PreconditionFailed);
            }
            return null;
        }
	}
}