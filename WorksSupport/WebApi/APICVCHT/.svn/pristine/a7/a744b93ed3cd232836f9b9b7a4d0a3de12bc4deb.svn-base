//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebClientAuthen.ERPMasterDataServices.Users.Users {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UsersSoap", Namespace="http://tempuri.org/")]
    public partial class Users : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionPermission1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionPermissionOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionPermissionOfUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorePermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorePermission1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorePermissionOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorePermissionOfUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPermission1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPermissionOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyPermissionOfUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuListOfUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleListOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModuleListOfUser1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModuleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateModuleList1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoginLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoginLog1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogoutLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogoutLog1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddActionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFunctionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Users() {
            this.Url = global::WebClientAuthen.Properties.Settings.Default.WebClientAuthen_ERPMasterDataServices_Users_Users_Users;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServerDateTimeCompletedEventHandler GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event GetFunctionPermissionCompletedEventHandler GetFunctionPermissionCompleted;
        
        /// <remarks/>
        public event GetFunctionPermission1CompletedEventHandler GetFunctionPermission1Completed;
        
        /// <remarks/>
        public event GetFunctionPermissionOfUserCompletedEventHandler GetFunctionPermissionOfUserCompleted;
        
        /// <remarks/>
        public event GetFunctionPermissionOfUser1CompletedEventHandler GetFunctionPermissionOfUser1Completed;
        
        /// <remarks/>
        public event GetStorePermissionCompletedEventHandler GetStorePermissionCompleted;
        
        /// <remarks/>
        public event GetStorePermission1CompletedEventHandler GetStorePermission1Completed;
        
        /// <remarks/>
        public event GetStorePermissionOfUserCompletedEventHandler GetStorePermissionOfUserCompleted;
        
        /// <remarks/>
        public event GetStorePermissionOfUser1CompletedEventHandler GetStorePermissionOfUser1Completed;
        
        /// <remarks/>
        public event GetCompanyPermissionCompletedEventHandler GetCompanyPermissionCompleted;
        
        /// <remarks/>
        public event GetCompanyPermission1CompletedEventHandler GetCompanyPermission1Completed;
        
        /// <remarks/>
        public event GetCompanyPermissionOfUserCompletedEventHandler GetCompanyPermissionOfUserCompleted;
        
        /// <remarks/>
        public event GetCompanyPermissionOfUser1CompletedEventHandler GetCompanyPermissionOfUser1Completed;
        
        /// <remarks/>
        public event GetMenuListCompletedEventHandler GetMenuListCompleted;
        
        /// <remarks/>
        public event GetMenuList1CompletedEventHandler GetMenuList1Completed;
        
        /// <remarks/>
        public event GetMenuListOfUserCompletedEventHandler GetMenuListOfUserCompleted;
        
        /// <remarks/>
        public event GetMenuListOfUser1CompletedEventHandler GetMenuListOfUser1Completed;
        
        /// <remarks/>
        public event GetModuleListCompletedEventHandler GetModuleListCompleted;
        
        /// <remarks/>
        public event GetModuleList1CompletedEventHandler GetModuleList1Completed;
        
        /// <remarks/>
        public event GetModuleListOfUserCompletedEventHandler GetModuleListOfUserCompleted;
        
        /// <remarks/>
        public event GetModuleListOfUser1CompletedEventHandler GetModuleListOfUser1Completed;
        
        /// <remarks/>
        public event UpdateModuleListCompletedEventHandler UpdateModuleListCompleted;
        
        /// <remarks/>
        public event UpdateModuleList1CompletedEventHandler UpdateModuleList1Completed;
        
        /// <remarks/>
        public event UpdateLoginLogCompletedEventHandler UpdateLoginLogCompleted;
        
        /// <remarks/>
        public event UpdateLoginLog1CompletedEventHandler UpdateLoginLog1Completed;
        
        /// <remarks/>
        public event UpdateLogoutLogCompletedEventHandler UpdateLogoutLogCompleted;
        
        /// <remarks/>
        public event UpdateLogoutLog1CompletedEventHandler UpdateLogoutLog1Completed;
        
        /// <remarks/>
        public event AddActionLogCompletedEventHandler AddActionLogCompleted;
        
        /// <remarks/>
        public event CheckFunctionCompletedEventHandler CheckFunctionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateTimeAsync(object userState) {
            if ((this.GetServerDateTimeOperationCompleted == null)) {
                this.GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerDateTime", new object[0], this.GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnGetServerDateTimeOperationCompleted(object arg) {
            if ((this.GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctionPermission(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetFunctionPermission", new object[] {
                        strAuthenData,
                        strGUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionPermissionAsync(string strAuthenData, string strGUID) {
            this.GetFunctionPermissionAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetFunctionPermissionAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.GetFunctionPermissionOperationCompleted == null)) {
                this.GetFunctionPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionPermissionOperationCompleted);
            }
            this.InvokeAsync("GetFunctionPermission", new object[] {
                        strAuthenData,
                        strGUID}, this.GetFunctionPermissionOperationCompleted, userState);
        }
        
        private void OnGetFunctionPermissionOperationCompleted(object arg) {
            if ((this.GetFunctionPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionPermissionCompleted(this, new GetFunctionPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetFunctionPermission1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionPermission1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetFunctionPermission(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetFunctionPermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID});
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionPermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            this.GetFunctionPermission1Async(dsResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetFunctionPermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, object userState) {
            if ((this.GetFunctionPermission1OperationCompleted == null)) {
                this.GetFunctionPermission1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionPermission1OperationCompleted);
            }
            this.InvokeAsync("GetFunctionPermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID}, this.GetFunctionPermission1OperationCompleted, userState);
        }
        
        private void OnGetFunctionPermission1OperationCompleted(object arg) {
            if ((this.GetFunctionPermission1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionPermission1Completed(this, new GetFunctionPermission1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionPermissionOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFunctionPermissionOfUser(string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetFunctionPermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionPermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName) {
            this.GetFunctionPermissionOfUserAsync(strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetFunctionPermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetFunctionPermissionOfUserOperationCompleted == null)) {
                this.GetFunctionPermissionOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionPermissionOfUserOperationCompleted);
            }
            this.InvokeAsync("GetFunctionPermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetFunctionPermissionOfUserOperationCompleted, userState);
        }
        
        private void OnGetFunctionPermissionOfUserOperationCompleted(object arg) {
            if ((this.GetFunctionPermissionOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionPermissionOfUserCompleted(this, new GetFunctionPermissionOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetFunctionPermissionOfUser1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFunctionPermissionOfUser1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetFunctionPermissionOfUser(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetFunctionPermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionPermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            this.GetFunctionPermissionOfUser1Async(dsResult, strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetFunctionPermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetFunctionPermissionOfUser1OperationCompleted == null)) {
                this.GetFunctionPermissionOfUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionPermissionOfUser1OperationCompleted);
            }
            this.InvokeAsync("GetFunctionPermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetFunctionPermissionOfUser1OperationCompleted, userState);
        }
        
        private void OnGetFunctionPermissionOfUser1OperationCompleted(object arg) {
            if ((this.GetFunctionPermissionOfUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionPermissionOfUser1Completed(this, new GetFunctionPermissionOfUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorePermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStorePermission(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetStorePermission", new object[] {
                        strAuthenData,
                        strGUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorePermissionAsync(string strAuthenData, string strGUID) {
            this.GetStorePermissionAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetStorePermissionAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.GetStorePermissionOperationCompleted == null)) {
                this.GetStorePermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorePermissionOperationCompleted);
            }
            this.InvokeAsync("GetStorePermission", new object[] {
                        strAuthenData,
                        strGUID}, this.GetStorePermissionOperationCompleted, userState);
        }
        
        private void OnGetStorePermissionOperationCompleted(object arg) {
            if ((this.GetStorePermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorePermissionCompleted(this, new GetStorePermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetStorePermission1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorePermission1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetStorePermission(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetStorePermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorePermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            this.GetStorePermission1Async(dsResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetStorePermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, object userState) {
            if ((this.GetStorePermission1OperationCompleted == null)) {
                this.GetStorePermission1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorePermission1OperationCompleted);
            }
            this.InvokeAsync("GetStorePermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID}, this.GetStorePermission1OperationCompleted, userState);
        }
        
        private void OnGetStorePermission1OperationCompleted(object arg) {
            if ((this.GetStorePermission1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorePermission1Completed(this, new GetStorePermission1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorePermissionOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStorePermissionOfUser(string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetStorePermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorePermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName) {
            this.GetStorePermissionOfUserAsync(strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetStorePermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetStorePermissionOfUserOperationCompleted == null)) {
                this.GetStorePermissionOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorePermissionOfUserOperationCompleted);
            }
            this.InvokeAsync("GetStorePermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetStorePermissionOfUserOperationCompleted, userState);
        }
        
        private void OnGetStorePermissionOfUserOperationCompleted(object arg) {
            if ((this.GetStorePermissionOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorePermissionOfUserCompleted(this, new GetStorePermissionOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetStorePermissionOfUser1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorePermissionOfUser1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetStorePermissionOfUser(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetStorePermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorePermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            this.GetStorePermissionOfUser1Async(dsResult, strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetStorePermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetStorePermissionOfUser1OperationCompleted == null)) {
                this.GetStorePermissionOfUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorePermissionOfUser1OperationCompleted);
            }
            this.InvokeAsync("GetStorePermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetStorePermissionOfUser1OperationCompleted, userState);
        }
        
        private void OnGetStorePermissionOfUser1OperationCompleted(object arg) {
            if ((this.GetStorePermissionOfUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorePermissionOfUser1Completed(this, new GetStorePermissionOfUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyPermission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompanyPermission(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetCompanyPermission", new object[] {
                        strAuthenData,
                        strGUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPermissionAsync(string strAuthenData, string strGUID) {
            this.GetCompanyPermissionAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetCompanyPermissionAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.GetCompanyPermissionOperationCompleted == null)) {
                this.GetCompanyPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPermissionOperationCompleted);
            }
            this.InvokeAsync("GetCompanyPermission", new object[] {
                        strAuthenData,
                        strGUID}, this.GetCompanyPermissionOperationCompleted, userState);
        }
        
        private void OnGetCompanyPermissionOperationCompleted(object arg) {
            if ((this.GetCompanyPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPermissionCompleted(this, new GetCompanyPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetCompanyPermission1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyPermission1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetCompanyPermission(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetCompanyPermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            this.GetCompanyPermission1Async(dsResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetCompanyPermission1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, object userState) {
            if ((this.GetCompanyPermission1OperationCompleted == null)) {
                this.GetCompanyPermission1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPermission1OperationCompleted);
            }
            this.InvokeAsync("GetCompanyPermission1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID}, this.GetCompanyPermission1OperationCompleted, userState);
        }
        
        private void OnGetCompanyPermission1OperationCompleted(object arg) {
            if ((this.GetCompanyPermission1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPermission1Completed(this, new GetCompanyPermission1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyPermissionOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompanyPermissionOfUser(string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetCompanyPermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName) {
            this.GetCompanyPermissionOfUserAsync(strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetCompanyPermissionOfUserAsync(string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetCompanyPermissionOfUserOperationCompleted == null)) {
                this.GetCompanyPermissionOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPermissionOfUserOperationCompleted);
            }
            this.InvokeAsync("GetCompanyPermissionOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetCompanyPermissionOfUserOperationCompleted, userState);
        }
        
        private void OnGetCompanyPermissionOfUserOperationCompleted(object arg) {
            if ((this.GetCompanyPermissionOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPermissionOfUserCompleted(this, new GetCompanyPermissionOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetCompanyPermissionOfUser1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyPermissionOfUser1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetCompanyPermissionOfUser(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetCompanyPermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyPermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            this.GetCompanyPermissionOfUser1Async(dsResult, strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetCompanyPermissionOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetCompanyPermissionOfUser1OperationCompleted == null)) {
                this.GetCompanyPermissionOfUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPermissionOfUser1OperationCompleted);
            }
            this.InvokeAsync("GetCompanyPermissionOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetCompanyPermissionOfUser1OperationCompleted, userState);
        }
        
        private void OnGetCompanyPermissionOfUser1OperationCompleted(object arg) {
            if ((this.GetCompanyPermissionOfUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyPermissionOfUser1Completed(this, new GetCompanyPermissionOfUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuList(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetMenuList", new object[] {
                        strAuthenData,
                        strGUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuListAsync(string strAuthenData, string strGUID) {
            this.GetMenuListAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetMenuListAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.GetMenuListOperationCompleted == null)) {
                this.GetMenuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuListOperationCompleted);
            }
            this.InvokeAsync("GetMenuList", new object[] {
                        strAuthenData,
                        strGUID}, this.GetMenuListOperationCompleted, userState);
        }
        
        private void OnGetMenuListOperationCompleted(object arg) {
            if ((this.GetMenuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuListCompleted(this, new GetMenuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetMenuList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuList1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetMenuList(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetMenuList1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuList1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            this.GetMenuList1Async(dsResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetMenuList1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, object userState) {
            if ((this.GetMenuList1OperationCompleted == null)) {
                this.GetMenuList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuList1OperationCompleted);
            }
            this.InvokeAsync("GetMenuList1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID}, this.GetMenuList1OperationCompleted, userState);
        }
        
        private void OnGetMenuList1OperationCompleted(object arg) {
            if ((this.GetMenuList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuList1Completed(this, new GetMenuList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMenuListOfUser(string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetMenuListOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuListOfUserAsync(string strAuthenData, string strGUID, string strUserName) {
            this.GetMenuListOfUserAsync(strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetMenuListOfUserAsync(string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetMenuListOfUserOperationCompleted == null)) {
                this.GetMenuListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuListOfUserOperationCompleted);
            }
            this.InvokeAsync("GetMenuListOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetMenuListOfUserOperationCompleted, userState);
        }
        
        private void OnGetMenuListOfUserOperationCompleted(object arg) {
            if ((this.GetMenuListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuListOfUserCompleted(this, new GetMenuListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetMenuListOfUser1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuListOfUser1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetMenuListOfUser(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetMenuListOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuListOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            this.GetMenuListOfUser1Async(dsResult, strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetMenuListOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetMenuListOfUser1OperationCompleted == null)) {
                this.GetMenuListOfUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuListOfUser1OperationCompleted);
            }
            this.InvokeAsync("GetMenuListOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetMenuListOfUser1OperationCompleted, userState);
        }
        
        private void OnGetMenuListOfUser1OperationCompleted(object arg) {
            if ((this.GetMenuListOfUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuListOfUser1Completed(this, new GetMenuListOfUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModuleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModuleList(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetModuleList", new object[] {
                        strAuthenData,
                        strGUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleListAsync(string strAuthenData, string strGUID) {
            this.GetModuleListAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetModuleListAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.GetModuleListOperationCompleted == null)) {
                this.GetModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleListOperationCompleted);
            }
            this.InvokeAsync("GetModuleList", new object[] {
                        strAuthenData,
                        strGUID}, this.GetModuleListOperationCompleted, userState);
        }
        
        private void OnGetModuleListOperationCompleted(object arg) {
            if ((this.GetModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleListCompleted(this, new GetModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetModuleList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModuleList1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetModuleList(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("GetModuleList1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleList1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID) {
            this.GetModuleList1Async(dsResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void GetModuleList1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, object userState) {
            if ((this.GetModuleList1OperationCompleted == null)) {
                this.GetModuleList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleList1OperationCompleted);
            }
            this.InvokeAsync("GetModuleList1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID}, this.GetModuleList1OperationCompleted, userState);
        }
        
        private void OnGetModuleList1OperationCompleted(object arg) {
            if ((this.GetModuleList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleList1Completed(this, new GetModuleList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModuleListOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModuleListOfUser(string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetModuleListOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleListOfUserAsync(string strAuthenData, string strGUID, string strUserName) {
            this.GetModuleListOfUserAsync(strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetModuleListOfUserAsync(string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetModuleListOfUserOperationCompleted == null)) {
                this.GetModuleListOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleListOfUserOperationCompleted);
            }
            this.InvokeAsync("GetModuleListOfUser", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetModuleListOfUserOperationCompleted, userState);
        }
        
        private void OnGetModuleListOfUserOperationCompleted(object arg) {
            if ((this.GetModuleListOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleListOfUserCompleted(this, new GetModuleListOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetModuleListOfUser1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModuleListOfUser1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage GetModuleListOfUser(ref System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            object[] results = this.Invoke("GetModuleListOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName});
            dsResult = ((System.Data.DataSet)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void GetModuleListOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName) {
            this.GetModuleListOfUser1Async(dsResult, strAuthenData, strGUID, strUserName, null);
        }
        
        /// <remarks/>
        public void GetModuleListOfUser1Async(System.Data.DataSet dsResult, string strAuthenData, string strGUID, string strUserName, object userState) {
            if ((this.GetModuleListOfUser1OperationCompleted == null)) {
                this.GetModuleListOfUser1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModuleListOfUser1OperationCompleted);
            }
            this.InvokeAsync("GetModuleListOfUser1", new object[] {
                        dsResult,
                        strAuthenData,
                        strGUID,
                        strUserName}, this.GetModuleListOfUser1OperationCompleted, userState);
        }
        
        private void OnGetModuleListOfUser1OperationCompleted(object arg) {
            if ((this.GetModuleListOfUser1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModuleListOfUser1Completed(this, new GetModuleListOfUser1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateModuleList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateModuleList(string strAuthenData, string strGUID, string strModuleList) {
            object[] results = this.Invoke("UpdateModuleList", new object[] {
                        strAuthenData,
                        strGUID,
                        strModuleList});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModuleListAsync(string strAuthenData, string strGUID, string strModuleList) {
            this.UpdateModuleListAsync(strAuthenData, strGUID, strModuleList, null);
        }
        
        /// <remarks/>
        public void UpdateModuleListAsync(string strAuthenData, string strGUID, string strModuleList, object userState) {
            if ((this.UpdateModuleListOperationCompleted == null)) {
                this.UpdateModuleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModuleListOperationCompleted);
            }
            this.InvokeAsync("UpdateModuleList", new object[] {
                        strAuthenData,
                        strGUID,
                        strModuleList}, this.UpdateModuleListOperationCompleted, userState);
        }
        
        private void OnUpdateModuleListOperationCompleted(object arg) {
            if ((this.UpdateModuleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModuleListCompleted(this, new UpdateModuleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateModuleList1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateModuleList1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage UpdateModuleList(ref bool bolResult, string strAuthenData, string strGUID, string strModuleList) {
            object[] results = this.Invoke("UpdateModuleList1", new object[] {
                        bolResult,
                        strAuthenData,
                        strGUID,
                        strModuleList});
            bolResult = ((bool)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateModuleList1Async(bool bolResult, string strAuthenData, string strGUID, string strModuleList) {
            this.UpdateModuleList1Async(bolResult, strAuthenData, strGUID, strModuleList, null);
        }
        
        /// <remarks/>
        public void UpdateModuleList1Async(bool bolResult, string strAuthenData, string strGUID, string strModuleList, object userState) {
            if ((this.UpdateModuleList1OperationCompleted == null)) {
                this.UpdateModuleList1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateModuleList1OperationCompleted);
            }
            this.InvokeAsync("UpdateModuleList1", new object[] {
                        bolResult,
                        strAuthenData,
                        strGUID,
                        strModuleList}, this.UpdateModuleList1OperationCompleted, userState);
        }
        
        private void OnUpdateModuleList1OperationCompleted(object arg) {
            if ((this.UpdateModuleList1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateModuleList1Completed(this, new UpdateModuleList1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLoginLog(string strAuthenData, string strGUID) {
            object[] results = this.Invoke("UpdateLoginLog", new object[] {
                        strAuthenData,
                        strGUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLoginLogAsync(string strAuthenData, string strGUID) {
            this.UpdateLoginLogAsync(strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void UpdateLoginLogAsync(string strAuthenData, string strGUID, object userState) {
            if ((this.UpdateLoginLogOperationCompleted == null)) {
                this.UpdateLoginLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoginLogOperationCompleted);
            }
            this.InvokeAsync("UpdateLoginLog", new object[] {
                        strAuthenData,
                        strGUID}, this.UpdateLoginLogOperationCompleted, userState);
        }
        
        private void OnUpdateLoginLogOperationCompleted(object arg) {
            if ((this.UpdateLoginLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoginLogCompleted(this, new UpdateLoginLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateLoginLog1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginLog1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage UpdateLoginLog(ref string strResult, string strAuthenData, string strGUID) {
            object[] results = this.Invoke("UpdateLoginLog1", new object[] {
                        strResult,
                        strAuthenData,
                        strGUID});
            strResult = ((string)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLoginLog1Async(string strResult, string strAuthenData, string strGUID) {
            this.UpdateLoginLog1Async(strResult, strAuthenData, strGUID, null);
        }
        
        /// <remarks/>
        public void UpdateLoginLog1Async(string strResult, string strAuthenData, string strGUID, object userState) {
            if ((this.UpdateLoginLog1OperationCompleted == null)) {
                this.UpdateLoginLog1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoginLog1OperationCompleted);
            }
            this.InvokeAsync("UpdateLoginLog1", new object[] {
                        strResult,
                        strAuthenData,
                        strGUID}, this.UpdateLoginLog1OperationCompleted, userState);
        }
        
        private void OnUpdateLoginLog1OperationCompleted(object arg) {
            if ((this.UpdateLoginLog1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoginLog1Completed(this, new UpdateLoginLog1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogoutLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLogoutLog(string strAuthenData, string strGUID, string strLogInLogID) {
            object[] results = this.Invoke("UpdateLogoutLog", new object[] {
                        strAuthenData,
                        strGUID,
                        strLogInLogID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogoutLogAsync(string strAuthenData, string strGUID, string strLogInLogID) {
            this.UpdateLogoutLogAsync(strAuthenData, strGUID, strLogInLogID, null);
        }
        
        /// <remarks/>
        public void UpdateLogoutLogAsync(string strAuthenData, string strGUID, string strLogInLogID, object userState) {
            if ((this.UpdateLogoutLogOperationCompleted == null)) {
                this.UpdateLogoutLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogoutLogOperationCompleted);
            }
            this.InvokeAsync("UpdateLogoutLog", new object[] {
                        strAuthenData,
                        strGUID,
                        strLogInLogID}, this.UpdateLogoutLogOperationCompleted, userState);
        }
        
        private void OnUpdateLogoutLogOperationCompleted(object arg) {
            if ((this.UpdateLogoutLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogoutLogCompleted(this, new UpdateLogoutLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="UpdateLogoutLog1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogoutLog1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage UpdateLogoutLog(ref bool bolResult, string strAuthenData, string strGUID, string strLogInLogID) {
            object[] results = this.Invoke("UpdateLogoutLog1", new object[] {
                        bolResult,
                        strAuthenData,
                        strGUID,
                        strLogInLogID});
            bolResult = ((bool)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogoutLog1Async(bool bolResult, string strAuthenData, string strGUID, string strLogInLogID) {
            this.UpdateLogoutLog1Async(bolResult, strAuthenData, strGUID, strLogInLogID, null);
        }
        
        /// <remarks/>
        public void UpdateLogoutLog1Async(bool bolResult, string strAuthenData, string strGUID, string strLogInLogID, object userState) {
            if ((this.UpdateLogoutLog1OperationCompleted == null)) {
                this.UpdateLogoutLog1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogoutLog1OperationCompleted);
            }
            this.InvokeAsync("UpdateLogoutLog1", new object[] {
                        bolResult,
                        strAuthenData,
                        strGUID,
                        strLogInLogID}, this.UpdateLogoutLog1OperationCompleted, userState);
        }
        
        private void OnUpdateLogoutLog1OperationCompleted(object arg) {
            if ((this.UpdateLogoutLog1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogoutLog1Completed(this, new UpdateLogoutLog1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddActionLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddActionLog(string strAuthenData, string strGUID, string strActionName, string strActionForm, string strActionType, string strActionContent) {
            object[] results = this.Invoke("AddActionLog", new object[] {
                        strAuthenData,
                        strGUID,
                        strActionName,
                        strActionForm,
                        strActionType,
                        strActionContent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddActionLogAsync(string strAuthenData, string strGUID, string strActionName, string strActionForm, string strActionType, string strActionContent) {
            this.AddActionLogAsync(strAuthenData, strGUID, strActionName, strActionForm, strActionType, strActionContent, null);
        }
        
        /// <remarks/>
        public void AddActionLogAsync(string strAuthenData, string strGUID, string strActionName, string strActionForm, string strActionType, string strActionContent, object userState) {
            if ((this.AddActionLogOperationCompleted == null)) {
                this.AddActionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddActionLogOperationCompleted);
            }
            this.InvokeAsync("AddActionLog", new object[] {
                        strAuthenData,
                        strGUID,
                        strActionName,
                        strActionForm,
                        strActionType,
                        strActionContent}, this.AddActionLogOperationCompleted, userState);
        }
        
        private void OnAddActionLogOperationCompleted(object arg) {
            if ((this.AddActionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddActionLogCompleted(this, new AddActionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultMessage CheckFunction(string strAuthenData, string strGUID, string strUserName, string strFunctionID, ref bool bolIsResult) {
            object[] results = this.Invoke("CheckFunction", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName,
                        strFunctionID,
                        bolIsResult});
            bolIsResult = ((bool)(results[1]));
            return ((ResultMessage)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFunctionAsync(string strAuthenData, string strGUID, string strUserName, string strFunctionID, bool bolIsResult) {
            this.CheckFunctionAsync(strAuthenData, strGUID, strUserName, strFunctionID, bolIsResult, null);
        }
        
        /// <remarks/>
        public void CheckFunctionAsync(string strAuthenData, string strGUID, string strUserName, string strFunctionID, bool bolIsResult, object userState) {
            if ((this.CheckFunctionOperationCompleted == null)) {
                this.CheckFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFunctionOperationCompleted);
            }
            this.InvokeAsync("CheckFunction", new object[] {
                        strAuthenData,
                        strGUID,
                        strUserName,
                        strFunctionID,
                        bolIsResult}, this.CheckFunctionOperationCompleted, userState);
        }
        
        private void OnCheckFunctionOperationCompleted(object arg) {
            if ((this.CheckFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFunctionCompleted(this, new CheckFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1098.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultMessage {
        
        private bool isErrorField;
        
        private ErrorTypes errorTypeField;
        
        private string messageField;
        
        private string messageDetailField;
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public ErrorTypes ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string MessageDetail {
            get {
                return this.messageDetailField;
            }
            set {
                this.messageDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1098.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ErrorTypes {
        
        /// <remarks/>
        No_Error,
        
        /// <remarks/>
        LoadInfo,
        
        /// <remarks/>
        Insert,
        
        /// <remarks/>
        Update,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        SearchData,
        
        /// <remarks/>
        GetData,
        
        /// <remarks/>
        InvalidIV,
        
        /// <remarks/>
        TokenNotExist,
        
        /// <remarks/>
        TokenInvalid,
        
        /// <remarks/>
        CheckData,
        
        /// <remarks/>
        Others,
        
        /// <remarks/>
        UserDefine,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetServerDateTimeCompletedEventHandler(object sender, GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetFunctionPermissionCompletedEventHandler(object sender, GetFunctionPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetFunctionPermission1CompletedEventHandler(object sender, GetFunctionPermission1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionPermission1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionPermission1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetFunctionPermissionOfUserCompletedEventHandler(object sender, GetFunctionPermissionOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionPermissionOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionPermissionOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetFunctionPermissionOfUser1CompletedEventHandler(object sender, GetFunctionPermissionOfUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionPermissionOfUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionPermissionOfUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetStorePermissionCompletedEventHandler(object sender, GetStorePermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorePermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorePermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetStorePermission1CompletedEventHandler(object sender, GetStorePermission1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorePermission1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorePermission1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetStorePermissionOfUserCompletedEventHandler(object sender, GetStorePermissionOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorePermissionOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorePermissionOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetStorePermissionOfUser1CompletedEventHandler(object sender, GetStorePermissionOfUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorePermissionOfUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorePermissionOfUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetCompanyPermissionCompletedEventHandler(object sender, GetCompanyPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetCompanyPermission1CompletedEventHandler(object sender, GetCompanyPermission1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPermission1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPermission1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetCompanyPermissionOfUserCompletedEventHandler(object sender, GetCompanyPermissionOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPermissionOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPermissionOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetCompanyPermissionOfUser1CompletedEventHandler(object sender, GetCompanyPermissionOfUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyPermissionOfUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyPermissionOfUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetMenuListCompletedEventHandler(object sender, GetMenuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetMenuList1CompletedEventHandler(object sender, GetMenuList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetMenuListOfUserCompletedEventHandler(object sender, GetMenuListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetMenuListOfUser1CompletedEventHandler(object sender, GetMenuListOfUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuListOfUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuListOfUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetModuleListCompletedEventHandler(object sender, GetModuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetModuleList1CompletedEventHandler(object sender, GetModuleList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetModuleListOfUserCompletedEventHandler(object sender, GetModuleListOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleListOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleListOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetModuleListOfUser1CompletedEventHandler(object sender, GetModuleListOfUser1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModuleListOfUser1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModuleListOfUser1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateModuleListCompletedEventHandler(object sender, UpdateModuleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateModuleList1CompletedEventHandler(object sender, UpdateModuleList1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateModuleList1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateModuleList1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bolResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateLoginLogCompletedEventHandler(object sender, UpdateLoginLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateLoginLog1CompletedEventHandler(object sender, UpdateLoginLog1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLoginLog1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLoginLog1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateLogoutLogCompletedEventHandler(object sender, UpdateLogoutLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogoutLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogoutLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateLogoutLog1CompletedEventHandler(object sender, UpdateLogoutLog1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogoutLog1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogoutLog1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bolResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void AddActionLogCompletedEventHandler(object sender, AddActionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddActionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddActionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void CheckFunctionCompletedEventHandler(object sender, CheckFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultMessage)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bolIsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591