using Nc.Erp.WorksSupport.Api.Common;
using Nc.Erp.WorksSupport.Api.Controllers;
using Nc.Erp.WorksSupport.Api.Models.Project;
using Nc.Erp.WorksSupport.Da.Configuration.Project;
using Nc.Erp.WorksSupport.Do.Configuration.Account;
using Nc.Erp.WorksSupport.Do.Configuration.Department;
using Nc.Erp.WorksSupport.Do.Configuration.Project;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace Nc.Erp.WorksSupport.Api.Features.WorksSupport
{
    /// <summary>
    /// Created by      : Nguyen Thi Kim Ngan
    /// Created date    : 30/05/2017
    /// Api độ trạng thái "ERP.EO.EO_WORKSSUPPORTPROJECT_MEMBER"
    /// </summary>
    [RoutePrefix("api/v2/ProjectMember")]
    public class ProjectController : BaseController
    {

        /// <summary>
        /// Tìm kiếm chất lượng yêu cầu công việc cần hỗ trợ theo keyword
        /// </summary>
        /// <returns></returns>
        [HttpGet]
        [Route("Search")]
        public Response<List<WorksSupportProject_Member>> Search([FromUri] SearchKeyParam objparam)
        {
            // Definition object to return.
            var ret = new Response<List<WorksSupportProject_Member>>();
            try
            {
                // Definition object return
                var listWorksSupportProject_Member = new List<WorksSupportProject_Member>();

                //object param
                object[] objKeywords = new object[]
                {
                    "@KEYWORDS", objparam.Keywords
                };
                // Call DaSystemManagement to search data.
                var objResultMessage = new DaWorksSupportProject_Member().SearchData(ref listWorksSupportProject_Member, objKeywords);

                if (listWorksSupportProject_Member != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportProject_Member;
                    ret.TotalRecord = listWorksSupportProject_Member.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }


        /// <summary>
        /// Tìm kiếm o uu tien yêu cầu công việc cần hỗ trợ theo keyword, isdeleted
        /// </summary>
        /// <returns></returns>

        [HttpGet]
        [Route("SearchKey")]
        public Response<List<WorksSupportProject>> Searchkey([FromUri] SearchKeyParamProject objparam)
        {
            // Definition object to return.
            var ret = new Response<List<WorksSupportProject>>();
            try
            {
                // Definition object return
                var listWorksSupportProject = new List<WorksSupportProject>();
                //object param
                object[] objKeywords = new object[]
                {
                    "@KEYWORDS", objparam.Keywords,
                    "@ISDELETED", objparam.IsDeleted,
                    "@PAGEINDEX", objparam.PageIndex,
                    "@PAGESIZE", objparam.PageSize
                };
               
                
                var objResultMessage = new DaWorksSupportProject().SearchData(ref listWorksSupportProject, objKeywords);

                if (listWorksSupportProject != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportProject;
                    ret.TotalRecord = listWorksSupportProject.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        /// <summary>
        /// Tìm kiếm chất lượng yêu cầu dự án cần hỗ trợ theo keyword
        /// </summary>
        /// <returns></returns>

        [HttpGet]
        [Route("SearchProject")]
        public Response<List<WorksSupportProject>> SearchProject([FromUri] SearchParam objparam)
        {
          
       
            // Definition object to return.
            var ret = new Response<List<WorksSupportProject>>();
            try
            {
                // Definition object return
                var listWorksSupportProject = new List<WorksSupportProject>();

                //object param
                object[] objKeywords = new object[]
                {
                    "@KEYWORDS", objparam.Keywords,
                    "@ISDELETED",objparam.IsDeleted,
                    "@PAGEINDEX", objparam.PageIndex,
                    "@PAGESIZE", objparam.PageSize
                };
                // Call DaSystemManagement to search data.
                var objResultMessage = new DaWorksSupportProject().SearchData(ref listWorksSupportProject, objKeywords);

                if (listWorksSupportProject != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportProject;
                    ret.TotalRecord = listWorksSupportProject.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        /// <summary>
        /// <summary>
        /// Lấy danh sách trạng thái dự án cần hỗ trợ
        /// </summary>
        /// <returns></returns>

        [HttpGet]
        [Route("")]
        public Response<List<WorksSupportProject>> GetAll()
        {
            // Definition object to return.
            var ret = new Response<List<WorksSupportProject>>();
            try
            {
                // Definition object return
                var listWorksSupportProject = new List<WorksSupportProject>();

                // Call DaSystemManagement to search data.
                var objResultMessage = new DaWorksSupportProject().GetAll(ref listWorksSupportProject);

                if (listWorksSupportProject != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportProject;
                    ret.TotalRecord = listWorksSupportProject.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {
                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        /// <summary>
        /// Lấy trạng thái dự án cần hỗ trợ theo ID
        /// </summary>
        /// <param name="objparam"></param>
        /// <returns></returns>

        [HttpGet]
        [Route("{id}")]
        public Response<WorksSupportProject> GetById([FromUri] GetByParam objparam)
        {
            // Definition object to return.
            var ret = new Response<WorksSupportProject>();
            try
            {
                //validate param
                ValidateParams(objparam);
                // Definition object return
                var obj = new WorksSupportProject();

                // Call DaWorksSupportStatus to search data.
                var objResultMessage = new DaWorksSupportProject().GetById(ref obj, objparam.Id);

                if (obj != null)
                {
                    ret.Success = true;
                    ret.Data = obj;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        /// <summary>
        /// Xóa trạng thái công việc cần hỗ trợ theo ID
        /// </summary>
        /// <param name="objparam"></param>
        /// <returns></returns>

        [HttpPost]
        [Route("Del")]
        public Response<WorksSupportProject> Delete([FromBody] DeleteParam objparam)
        {
            // Definition object to return.
            var ret = new Response<WorksSupportProject>();
            try
            {
                //Validate param
                ValidateParams(objparam);
                // Call DaWorksSupportStatus to search data.
                var objResultMessage = new DaWorksSupportProject().Delete(objparam.User, objparam.Id);

                if (!objResultMessage.IsError)
                {
                    ret.Success = true;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {
                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        [HttpPost]
        [Route("insertBy")]
        public Response<WorksSupportProject> SaveDataBy([FromBody] SaveParamBy objparam)
        {
            // Definition object to return.
            var ret = new Response<WorksSupportProject>();
            try
            {
                //validate param
                ValidateParams(objparam);
                // Definition object return
                var listError = new List<ValidationError>();
                var objCheck = new ProjectValidation();
                var objChekName = new DaWorksSupportProject().CheckValuesExisted(ref objCheck, objparam.Id, objparam.WorksSupportProjectName, objparam.OrderIndex);
                if (objCheck.CountName >= 1)
                {
                    var error = new ValidationError();
                    error.Key = "WorksSupportProjectName";
                    error.Message = "NCS-000001: Tên đã tồn tại";
                    listError.Add(error);
                }
                if (objCheck.CountOrderIndex >= 1)
                {
                    var error = new ValidationError();
                    error.Key = "OrderIndex";
                    error.Message = "NCS-000002: Thứ tự hiển thị bì trùng";
                    listError.Add(error);
                }
                if (listError.Count > 0)
                {
                    ret.Success = false;
                    ret.Errors = listError;
                    return ret;
                }
                var obj = new WorksSupportProject()
                {
                    WorksSupportProjectId = objparam.Id,
                    WorksSupportProjectName = objparam.WorksSupportProjectName,
                    WorksSupportTypeId = objparam.WorksSupportTypeId,
                    Description = objparam.Description,
                    OrderIndex = objparam.OrderIndex,
                    IsActived = objparam.IsActived,
                    IsSystem = objparam.IsSystem,
                    UpdatedUser = objparam.User
                };

                // Call DaWorksSupportStatus to search data.
                var objResultMessage = new DaWorksSupportProject().Insert(obj, ref obj);

                if (!objResultMessage.IsError)
                {
                    ret.Success = true;
                    ret.Data = obj;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        [HttpPost]
        [Route("save")]
        public ResponseV1<WorksSupportProject> SaveData([FromBody] SaveParamBy objparam)
        {
            // Definition object to return.
            var ret = new Response<WorksSupportProject>();
            var result = new ResponseV1<WorksSupportProject>();
            ret = SaveDataBy(objparam);
            if (ret != null)
            {
                result.data = new List<WorksSupportProject> { ret.Data };
            }
            return result;
        }

        /// <summary>
        /// <summary>
        /// Lấy danh sách phòng ban
        /// </summary>
        /// <returns></returns>
        [HttpGet]
        [Route("Department")]
        public Response<List<WorksSupportDepartment>> GetAllDepartment()
        {
            // Definition object to return.
            var ret = new Response<List<WorksSupportDepartment>>();
            try
            {
                // Definition object return
                var listWorksSupportDepartment = new List<WorksSupportDepartment>();

                // Call DaSystemManagement to search data.
                var objResultMessage = new DaWorksSupportProject().GetAllDepartment(ref listWorksSupportDepartment);

                if (listWorksSupportDepartment != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportDepartment;
                    ret.TotalRecord = listWorksSupportDepartment.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {
                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        [HttpPost]
        [Route("SearchUser")]
        public Response<List<User>> SearchUser([FromBody] SearchParamUser objparam)
        {
            // Definition object to return.
            var ret = new Response<List<User>>();
            try
            {
                // Definition object return
                var listWorksSupportUser = new List<User>();

                //object param
                object[] objKeywords = new object[]
                {
                    "@DEPARTMENTID",objparam.DepartmentId,
                    "@KEYWORDS", objparam.Keywords
                    
                    
                };
                // Call DaSystemManagement to search data.
                var objResultMessage = new DaWorksSupportProject().SearchDataUser(ref listWorksSupportUser, objKeywords);

                if (listWorksSupportUser != null)
                {
                    ret.Success = true;
                    ret.Data = listWorksSupportUser;
                    ret.TotalRecord = listWorksSupportUser.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {

                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }

        /// <summary>
        /// <summary>
        /// Lấy danh sách dự án EO_WORKS
        /// </summary>
        /// <returns></returns>

        [HttpGet]
        [Route("projectInvole")]
        public Response<List<Projects>> GetAll_WorksInvole()
        {
            // Definition object to return.
            var ret = new Response<List<Projects>>();
            try
            {
                // Definition object return
                var listProject = new List<Projects>();

                // Call DaSystemManagement to search data.
                var objResultMessage = new DaProject().GetAll(ref listProject);

                if (listProject != null)
                {
                    ret.Success = true;
                    ret.Data = listProject;
                    ret.TotalRecord = listProject.Count;
                }
                else
                {
                    ret.Success = false;
                    ret.Message = objResultMessage.Message;
                }
                // Return data.
                return ret;
            }
            catch (Exception e)
            {
                var desc = string.Empty;
                if (e.InnerException != null)
                {
                    desc = e.InnerException.ToString();
                }
                else
                {
                    desc = e.Message;
                }
                var msg = Request.CreateErrorResponse(HttpStatusCode.BadRequest, desc);
                throw new HttpResponseException(msg);
            }
        }
    }
}
