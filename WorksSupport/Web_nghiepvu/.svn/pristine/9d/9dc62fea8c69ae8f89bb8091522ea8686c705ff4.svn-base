System.register(["../../../../common/helpers/configHelper"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    function getMembers() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles");
        return connector.get(url);
    }
    function getMembersActived() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/MemberRoleActived");
        return connector.get(url);
    }
    // Search data by keyWord and isDeleleted
    function getMemberBy(keyWord, isDelete, pageIndex, pageSize) {
        var connector = window.ioc.resolve("IConnector");
        // cunstructer param to search.
        var keySearch = "?Keywords=" + keyWord;
        var isDel = "&IsDeleted=" + isDelete;
        var index = "&PageIndex=" + pageIndex;
        var size = "&PageSize=" + pageSize;
        var url = String.format("{0}{1}{2}{3}{4}{5}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/Search", keySearch, isDel, index, size);
        return connector.get(url);
    }
    function getMemberByActived(keyWord, isDelete, pageIndex, pageSize) {
        var connector = window.ioc.resolve("IConnector");
        // cunstructer param to search.
        var keySearch = "?Keywords=" + keyWord;
        var isDel = "&IsDeleted=" + isDelete;
        var index = "&PageIndex=" + pageIndex;
        var size = "&PageSize=" + pageSize;
        var url = String.format("{0}{1}{2}{3}{4}{5}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/SearchActived", keySearch, isDel, index, size);
        return connector.get(url);
    }
    // Get data by id
    function get(id) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}{2}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/", id);
        return connector.get(url);
    }
    // Create new data
    function create(role) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}", configHelper_1.default.getAppConfig().api.baseUrl);
        return connector.post(url, role);
    }
    function createMenber(model) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/insertBy");
        return connector.post(url, model);
    }
    // Update data
    function update(model) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/insertBy");
        return connector.post(url, model);
    }
    // Delete data
    function remove(DeleteModel) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/del");
        return connector.post(url, DeleteModel);
    }
    // Get WorksFlow by Id and name
    function getByIdAndName(id, keyWork) {
        var connector = window.ioc.resolve("IConnector");
        var strId = "?Id=" + id;
        var strKeyWork = "&KeyWork=" + keyWork;
        var url = String.format("{0}{1}{2}{3}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/WorksSupport/getworksflowbyidandname", strId, strKeyWork);
        return connector.get(url);
    }
    function getMembersByDepartment() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/memberroles/GetDepartment");
        return connector.get(url);
    }
    function getAllDepartment() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/ProjectMember/Department");
        return connector.get(url);
    }
    var configHelper_1, memberService;
    return {
        setters: [
            function (configHelper_1_1) {
                configHelper_1 = configHelper_1_1;
            }
        ],
        execute: function () {
            memberService = {
                getMembers: getMembers,
                getMemberBy: getMemberBy,
                create: create,
                createMenber: createMenber,
                update: update,
                delete: remove,
                get: get,
                getByIdAndName: getByIdAndName,
                getMembersByDepartment: getMembersByDepartment,
                getAllDepartment: getAllDepartment,
                getMembersActived: getMembersActived,
                getMemberByActived: getMemberByActived
            };
            exports_1("default", memberService);
        }
    };
});
//# sourceMappingURL=memberService.js.map