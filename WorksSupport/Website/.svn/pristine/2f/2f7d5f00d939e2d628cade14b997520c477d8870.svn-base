System.register([], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var PrioritiesModel;
    return {
        setters: [],
        execute: function () {
            PrioritiesModel = (function () {
                function PrioritiesModel(resourceHelper) {
                    this.options = {};
                    this.eventKey = "priorities_ondatasource_changed";
                    this.actions = [];
                    this.options = {
                        columns: [
                            { field: "WorksSupportPriorityId", title: resourceHelper.resolve("configurations.priorities.grid.index"), type: "id", index: 0 },
                            { field: "OrderIndex", title: resourceHelper.resolve("configurations.priorities.grid.index"), type: "rownumber", index: 1, width: "8%", className: "text-center" },
                            { field: "WorksSupportPriorityName", title: resourceHelper.resolve("configurations.priorities.grid.name"), type: "text", index: 1 },
                            { field: "Description", title: resourceHelper.resolve("configurations.priorities.grid.description"), type: "text", index: 2 },
                            { field: "IconUrl", title: resourceHelper.resolve("configurations.priorities.grid.iconUrl"), type: "icon", index: 3, content: "<a class=\"modalIcon\" href=\"#\" data-toggle=\"modal\" data-target=\"#myIconModal\"><i class='fa fa-edit' aria-hidden=\"true\"></i></a>", className: "text-center" },
                            { field: "IsSystem", title: resourceHelper.resolve("configurations.priorities.grid.isSystem"), type: "checkbox", index: 4, width: "5%", className: "text-center" },
                            { field: "IsActived", title: resourceHelper.resolve("configurations.priorities.grid.isActive"), type: "toggle", index: 5, width: "5%", className: "text-center" }
                        ],
                        data: [],
                        enableEdit: true,
                        enableDelete: false,
                        ajaxUrl: "http://nc.erp.workssupport.com/api/v1/priorities/save"
                    };
                }
                PrioritiesModel.prototype.addPageAction = function (action) {
                    this.actions.push(action);
                };
                PrioritiesModel.prototype.importPriority = function (items) {
                    var eventManager = window.ioc.resolve("IEventManager");
                    eventManager.publish(this.eventKey, items);
                };
                return PrioritiesModel;
            }());
            exports_1("PrioritiesModel", PrioritiesModel);
        }
    };
});
//# sourceMappingURL=prioritiesModel.js.map