import { Component, Input, Output, EventEmitter } from "angular2/core";
import { BaseControl } from "../../models/ui";
import guidHelper from "../../helpers/guidHelper";
@Component({
    selector: "form-datepicker",
    templateUrl: "app/common/directives/form/datePicker.html"
})
export class FormDatePicker extends BaseControl {
    public id: string = String.format("date-picker-{0}", guidHelper.create());
    @Input() model: any;
    @Input() placeholder: any;
    @Input() disabled: any;
    @Output() modelChange: EventEmitter<any> = new EventEmitter<any>();
    @Output() onValueChanged = new EventEmitter();
    @Input() minDate: string = "01/01/1900";
    @Input() maxDate: string = String.empty;
    protected onReady() {
        let self: FormDatePicker = this;
        let month: string;
        let day: string;
        let objDate = new Date();
        month = objDate.getMonth() + 1 < 10 ? "0" + (objDate.getMonth() + 1) : (objDate.getMonth() + 1).toString();
        day = objDate.getDate() < 10 ? "0" + objDate.getDate() : objDate.getDate().toString();
        let nowDate = day + "/" + month + "/" + objDate.getFullYear();
        let daysOfWeek: any = ["CN", "T2", "T3", "T4", "T5", "T6", "T7"];
        let monthNames: any = ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6",
                               "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"]
        window.jQuery("#" + this.id).daterangepicker({
            singleDatePicker: true,
            autoUpdateInput: true,
            locale: {
                format: 'DD/MM/YYYY',
                separator: " - ",
                applyLabel: "Apply",
                cancelLabel: "Cancel",
                fromLabel: "From",
                toLabel: "To",
                customRangeLabel: "Custom",
                daysOfWeek: daysOfWeek,
                monthNames: monthNames,
            },
            firstDay: 1,
            minDate: self.ConvertDD_MMtoMM_DD(self.minDate)
        },
            function (selectedValue: Date) {
                let objDate = new Date(selectedValue);
                month = objDate.getMonth() + 1 < 10 ? "0" + (objDate.getMonth() + 1) : (objDate.getMonth() + 1).toString();
                day = objDate.getDate() < 10 ? "0" + objDate.getDate() : objDate.getDate().toString();
                self.modelChange.emit(day + "/" + month + "/" + objDate.getFullYear());
            });
        self.modelChange.emit(window.jQuery("#" + this.id).val());
    }
    private ConvertDD_MMtoMM_DD(date: string) {
        if (date !== null || date !== undefined) {
            let day = date.split("/")[0];
            let month = date.split("/")[1];
            let year = date.split("/")[2];
            return month + "/" + day + "/" + year;
        }
        else {
            return this.minDate;
        }
    }
    public resetDate()
    {
        let $ = window.jQuery;
        console.log($("#" + this.id));
        $("#" + this.id).data('daterangepicker');;
    }
}