System.register(["angular2/core", "angular2/router", "../../../common/models/ui", "./qualitiesModel", "../_share/services/qualityService", "../../../common/directive", "./updateModel", "../_share/config/route"], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __extends = (this && this.__extends) || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, router_1, ui_1, qualitiesModel_1, qualitiesModel_2, qualityService_1, directive_1, updateModel_1, route_1;
    var Qualities;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (router_1_1) {
                router_1 = router_1_1;
            },
            function (ui_1_1) {
                ui_1 = ui_1_1;
            },
            function (qualitiesModel_1_1) {
                qualitiesModel_1 = qualitiesModel_1_1;
                qualitiesModel_2 = qualitiesModel_1_1;
            },
            function (qualityService_1_1) {
                qualityService_1 = qualityService_1_1;
            },
            function (directive_1_1) {
                directive_1 = directive_1_1;
            },
            function (updateModel_1_1) {
                updateModel_1 = updateModel_1_1;
            },
            function (route_1_1) {
                route_1 = route_1_1;
            }],
        execute: function() {
            Qualities = (function (_super) {
                __extends(Qualities, _super);
                function Qualities(router) {
                    _super.call(this);
                    this.actions = [];
                    this.selectedValue = [];
                    var self = this;
                    self.router = router;
                    self.model = new qualitiesModel_1.QualitiesModel(self.i18nHelper);
                    self.loadQualities();
                }
                Qualities.prototype.onAddNewQualitiesClicked = function () {
                    //this.router.navigate([route.quality.addRole.name]);
                };
                Qualities.prototype.onEditMemberClicked = function (event) {
                    // this.router.navigate([route.role.editRole.name, { id: event.item.id }]);
                };
                Qualities.prototype.onDeleteMembersItemClicked = function (event) {
                    var self = this;
                    qualityService_1.default.delete(event.item.id).then(function () {
                        self.loadQualities();
                    });
                };
                Qualities.prototype.loadQualities = function () {
                    var self = this;
                    qualityService_1.default.getQualilies().then(function (items) {
                        self.model.importQualities(items);
                    });
                };
                Qualities.prototype.onAddNewQualityClicked = function (event) {
                    //this.router.navigate([route.priority.addPriority.name]); 
                    var grid = this.gridComponent.grid.row.add({
                        "WorksSupportQualityId": "0",
                        "IconUrl": "fa fa-edit"
                    }).draw();
                };
                // Delete Qualities
                Qualities.prototype.onShowPopupDelete = function (event) {
                    var $ = window.jQuery;
                    var self = this;
                    this.selectedValue = new Array();
                    var lstId = [];
                    var grid = this.gridComponent.grid.rows('.selected').data();
                    for (var i = 0; i < grid.length; i++) {
                        this.selectedValue.push({ id: grid[i]["WorksSupportQualityId"], name: grid[i]["WorksSupportQualityName"] });
                        lstId.push(grid[i]["WorksSupportQualityId"]);
                    }
                    this.objDelete = new qualitiesModel_2.DeleteModel(lstId.toString(), "administrator");
                };
                Qualities.prototype.onDeleteQualitys = function (event) {
                    var $ = window.jQuery;
                    var self = this;
                    qualityService_1.default.delete(this.objDelete).then(function (event) {
                        self.router.navigate([route_1.default.quality.qualities.name]);
                        $('#modal').modal('hide');
                        $('.modal-backdrop').modal('hide');
                    });
                    //Call delete function..!
                };
                // Get data by status : 1/0
                Qualities.prototype.onStatusChange = function (event) {
                    var self = this;
                    var currentIsDelete = event.currentTarget.value;
                    var $ = window.jQuery;
                    var qualitiName = $('#qualitiName').val();
                    // get data of dropdownlist.
                    qualityService_1.default.getQualityBy(qualitiName, currentIsDelete, 0, 10).then(function (items) {
                        self.model.importQualities(items);
                    });
                    // check status is delete to show delete button.
                    if (currentIsDelete == "1") {
                        $("#btnDeletePopup").css("display", "none");
                    }
                    else {
                        $("#btnDeletePopup").css("display", "inline-block");
                    }
                };
                // Search data by name
                Qualities.prototype.SearchByKey = function (event) {
                    var $ = window.jQuery;
                    var qualitiName = $('#qualitiName').val();
                    var self = this;
                    qualityService_1.default.getQualityBy(qualitiName, 0, 0, 10).then(function (items) {
                        self.model.importQualities(items);
                    });
                };
                Qualities.prototype.onToggleSelectChanged = function (event) {
                    var self = this;
                    var model = new updateModel_1.UpdateQualityModel();
                    model.import(event.item);
                    qualityService_1.default.update(model).then(function (event) {
                        self.router.navigate([route_1.default.quality.qualities.name]);
                    });
                };
                Qualities.prototype.onIconSelectChanged = function (event) {
                    var self = this;
                    var model = new updateModel_1.UpdateQualityModel();
                    model.import(event.item);
                    qualityService_1.default.update(model).then(function (event) {
                        self.router.navigate([route_1.default.quality.qualities.name]);
                    });
                };
                __decorate([
                    core_1.ViewChild(directive_1.Grid), 
                    __metadata('design:type', directive_1.Grid)
                ], Qualities.prototype, "gridComponent", void 0);
                Qualities = __decorate([
                    core_1.Component({
                        templateUrl: "app/modules/configurations/quality/qualities.html",
                        directives: [directive_1.Grid, directive_1.PageActions, directive_1.Page]
                    }), 
                    __metadata('design:paramtypes', [router_1.Router])
                ], Qualities);
                return Qualities;
            }(ui_1.BasePage));
            exports_1("Qualities", Qualities);
        }
    }
});
//# sourceMappingURL=qualities.js.map