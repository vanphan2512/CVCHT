System.register(["../../../common/services/cacheService"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var cacheService_1, cacheService_2, WorksTypesModel, DeleteModel, AddWorkTypeModel, StepModel;
    return {
        setters: [
            function (cacheService_1_1) {
                cacheService_1 = cacheService_1_1;
                cacheService_2 = cacheService_1_1;
            }
        ],
        execute: function () {
            WorksTypesModel = (function () {
                function WorksTypesModel(resourceHelper) {
                    this.options = {};
                    this.eventKey = "worksType_ondatasource_changed";
                    this.actions = [];
                    var isCanDelete = cacheService_1.default.get(cacheService_2.CACHE_CONSTANT.EO_WORKSSUPORTGROUP_DELETE) === "true" ? true : false;
                    if (!isCanDelete) {
                        this.options = {
                            columns: [
                                { field: "OrderIndex", title: resourceHelper.resolve("configurations.worksType.grid.index"), type: "rownumber", index: 1, width: "7%", className: "text-center", sort: "true" },
                                { field: "WorksSupportTypeName", title: resourceHelper.resolve("configurations.worksType.grid.name"), type: "text", index: 2, sort: "true", width: "20%" },
                                { field: "Description", title: resourceHelper.resolve("configurations.worksType.grid.description"), type: "text", index: 3, sort: "false" },
                                { field: "IconUrl", title: resourceHelper.resolve("configurations.worksType.grid.iconUrl"), type: "icon", index: 4, content: "<a class=\"modalIcon\" href=\"#\" data-toggle=\"modal\" data-target=\"#myIconModal\"><i class='fa fa-edit' aria-hidden=\"true\"></i></a>", className: "text-center", sort: "false", width: "8%" },
                                { field: "IsSystem", title: resourceHelper.resolve("configurations.worksType.grid.isSystem"), type: "checkbox", index: 5, width: "8%", className: "text-center", sort: "true" },
                                { field: "IsActived", title: resourceHelper.resolve("configurations.worksType.grid.isActive"), type: "toggle", index: 6, width: "8%", className: "text-center", sort: "true" },
                            ],
                            data: [],
                            enableEdit: true,
                            enableDelete: false,
                            ajaxUrl: "http://nc.erp.workssupport.com/api/v2/workssupporttypes/save"
                        };
                    }
                    else {
                        this.options = {
                            columns: [
                                { field: "WorksSupportTypeId", title: resourceHelper.resolve("configurations.worksType.grid.index"), type: "id", index: 0, sort: "true" },
                                { field: "OrderIndex", title: resourceHelper.resolve("configurations.worksType.grid.index"), type: "rownumber", index: 1, width: "7%", className: "text-center", sort: "true" },
                                { field: "WorksSupportTypeName", title: resourceHelper.resolve("configurations.worksType.grid.name"), type: "text", index: 2, sort: "true", width: "20%" },
                                { field: "Description", title: resourceHelper.resolve("configurations.worksType.grid.description"), type: "text", index: 3, sort: "false" },
                                { field: "IconUrl", title: resourceHelper.resolve("configurations.worksType.grid.iconUrl"), type: "icon", index: 4, content: "<a class=\"modalIcon\" href=\"#\" data-toggle=\"modal\" data-target=\"#myIconModal\"><i class='fa fa-edit' aria-hidden=\"true\"></i></a>", className: "text-center", sort: "false", width: "8%" },
                                { field: "IsSystem", title: resourceHelper.resolve("configurations.worksType.grid.isSystem"), type: "checkbox", index: 5, width: "8%", className: "text-center", sort: "true" },
                                { field: "IsActived", title: resourceHelper.resolve("configurations.worksType.grid.isActive"), type: "toggle", index: 6, width: "8%", className: "text-center", sort: "true" },
                            ],
                            data: [],
                            enableEdit: true,
                            enableDelete: false,
                            ajaxUrl: "http://nc.erp.workssupport.com/api/v2/workssupporttypes/save"
                        };
                    }
                }
                WorksTypesModel.prototype.importWorksTypes = function (items) {
                    var eventManager = window.ioc.resolve("IEventManager");
                    eventManager.publish(this.eventKey, items);
                };
                return WorksTypesModel;
            }());
            exports_1("WorksTypesModel", WorksTypesModel);
            DeleteModel = (function () {
                function DeleteModel(id, user) {
                    this.Id = String.empty;
                    this.User = String.empty;
                    this.Id = id;
                    this.User = user;
                }
                return DeleteModel;
            }());
            exports_1("DeleteModel", DeleteModel);
            AddWorkTypeModel = (function () {
                function AddWorkTypeModel(WorksSupportTypeId, WorksSupportTypeName, Description, IconUrL, IsActived, IsSystem, Priority, Quality, Step, User, OrderIndex, DeletedStepId) {
                    this.WorksSupportTypeId = 0;
                    this.WorksSupportTypeName = String.empty;
                    this.Description = String.empty;
                    this.IconUrL = String.empty;
                    this.IsActived = false;
                    this.IsSystem = false;
                    this.Priority = String.empty;
                    this.Quality = String.empty;
                    this.Status = String.empty;
                    this.Step = String.empty;
                    this.User = String.empty;
                    this.OrderIndex = 0;
                    this.DeletedStepId = String.empty;
                    this.WorksSupportTypeId = WorksSupportTypeId;
                    this.WorksSupportTypeName = WorksSupportTypeName;
                    this.Description = Description;
                    this.IconUrL = IconUrL;
                    this.IsActived = IsActived;
                    this.IsSystem = IsSystem;
                    this.Priority = Priority;
                    this.Quality = Quality;
                    this.Step = Step;
                    this.User = User;
                    this.OrderIndex = OrderIndex;
                    this.DeletedStepId = DeletedStepId;
                }
                return AddWorkTypeModel;
            }());
            exports_1("AddWorkTypeModel", AddWorkTypeModel);
            StepModel = (function () {
                function StepModel(StepID, StepNAME, StepDESCRIPTION, StepSTEPCOLORCODE, StepMAXPROCESSTIME, StepISINITSTEP, StepISFINISHSTEP, listNextStep, isEdit) {
                    this.StepID = String.empty;
                    this.StepNAME = "";
                    this.StepDESCRIPTION = "";
                    this.StepSTEPCOLORCODE = "";
                    this.StepMAXPROCESSTIME = "";
                    this.listNextStep = [];
                    this.isEdit = false;
                    this.StepISINITSTEP = false;
                    this.StepISFINISHSTEP = false;
                    this.StepID = StepID;
                    this.StepNAME = StepNAME;
                    this.StepDESCRIPTION = StepDESCRIPTION;
                    this.StepSTEPCOLORCODE = StepSTEPCOLORCODE;
                    this.StepMAXPROCESSTIME = StepMAXPROCESSTIME;
                    this.StepISINITSTEP = StepISINITSTEP;
                    this.StepISFINISHSTEP = StepISFINISHSTEP;
                    this.listNextStep = listNextStep;
                    this.isEdit = isEdit;
                }
                return StepModel;
            }());
            exports_1("StepModel", StepModel);
        }
    };
});
//# sourceMappingURL=worksTypesModel.js.map