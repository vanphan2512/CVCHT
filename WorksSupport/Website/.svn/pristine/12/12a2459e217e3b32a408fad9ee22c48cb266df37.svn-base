System.register(["../../../../common/helpers/configHelper"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    function getWorksTypes() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes");
        return connector.get(url);
    }
    function getWorksTypesActived() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/worksTypeActived");
        return connector.get(url);
    }
    // Get data by Id
    function get(id) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}{2}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/", id);
        return connector.get(url);
    }
    // Create new
    function create(role) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/insertBy");
        return connector.post(url, role);
    }
    // Update data
    function update(model) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/insertBy");
        return connector.post(url, model);
    }
    // Remove data
    function remove(deleteModel) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}/{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/Del");
        return connector.post(url, deleteModel);
    }
    // Get data by keyWords, isDeleted, pageIndex, PageSize
    function getWorkTypeBy(keyWord, isDelete, pageIndex, pageSize) {
        var connector = window.ioc.resolve("IConnector");
        // cunstructer param to search.
        var keySearch = "?Keywords=" + keyWord;
        var isDel = "&IsDeleted=" + isDelete;
        var index = "&PageIndex=" + pageIndex;
        var size = "&PageSize=" + pageSize;
        var url = String.format("{0}{1}{2}{3}{4}{5}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/Search", keySearch, isDel, index, size);
        return connector.get(url);
    }
    // Save/Update Permission
    function createPermission(strJsonPermission) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/SaveOrUpdatePermission");
        return connector.post(url, JSON.stringify(strJsonPermission));
    }
    /**
     * Copy Permission from workTypeId to another workstypeId
     *
     * @param {*} model
     * @returns {Promise}
     */
    function copyPermission(model) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v2/workssupporttypes/copyPermission");
        return connector.post(url, model);
    }
    var configHelper_1, worksTypeService;
    return {
        setters: [
            function (configHelper_1_1) {
                configHelper_1 = configHelper_1_1;
            }
        ],
        execute: function () {
            worksTypeService = {
                getWorksTypes: getWorksTypes,
                create: create,
                update: update,
                delete: remove,
                get: get,
                getWorkTypeBy: getWorkTypeBy,
                createPermission: createPermission,
                copyPermission: copyPermission,
                getWorksTypesActived: getWorksTypesActived
            };
            exports_1("default", worksTypeService);
        }
    };
});
//# sourceMappingURL=worksTypeService.js.map