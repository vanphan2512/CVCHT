System.register(["angular2/core", "../../models/ui", "../../directive", "../../enum"], function (exports_1, context_1) {
    "use strict";
    var __extends = (this && this.__extends) || (function () {
        var extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return function (d, b) {
            extendStatics(d, b);
            function __() { this.constructor = d; }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
    })();
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var core_1, ui_1, directive_1, enum_1, SelectOptions;
    return {
        setters: [
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (ui_1_1) {
                ui_1 = ui_1_1;
            },
            function (directive_1_1) {
                directive_1 = directive_1_1;
            },
            function (enum_1_1) {
                enum_1 = enum_1_1;
            }
        ],
        execute: function () {
            SelectOptions = (function (_super) {
                __extends(SelectOptions, _super);
                function SelectOptions() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.labelText = String.empty;
                    _this.modelChange = new core_1.EventEmitter();
                    _this.type = enum_1.FormSelectType.SingleButton;
                    _this.dataSource = {};
                    _this.textPattern = "{0}";
                    _this.FormSelectType = enum_1.FormSelectType;
                    return _this;
                }
                SelectOptions.prototype.onModelChanged = function (value) {
                    this.model = value;
                    this.modelChange.emit(value);
                };
                SelectOptions.prototype.getOptions = function () {
                    var options = [];
                    if (!this.dataSource || this.dataSource.length <= 0) {
                        return options;
                    }
                    for (var pro in this.dataSource) {
                        if (isNaN(parseInt(pro)) || !this.dataSource.hasOwnProperty(pro)) {
                            continue;
                        }
                        options.push({ value: pro, text: this.i18nHelper.resolve(String.format(this.textPattern, this.dataSource[pro].firstCharToLower())) });
                    }
                    options[0].active = true;
                    return options;
                };
                __decorate([
                    core_1.Input(),
                    __metadata("design:type", String)
                ], SelectOptions.prototype, "labelText", void 0);
                __decorate([
                    core_1.Input(),
                    __metadata("design:type", Object)
                ], SelectOptions.prototype, "model", void 0);
                __decorate([
                    core_1.Output(),
                    __metadata("design:type", Object)
                ], SelectOptions.prototype, "modelChange", void 0);
                __decorate([
                    core_1.Input(),
                    __metadata("design:type", typeof (_a = typeof enum_1.FormSelectType !== "undefined" && enum_1.FormSelectType) === "function" && _a || Object)
                ], SelectOptions.prototype, "type", void 0);
                __decorate([
                    core_1.Input(),
                    __metadata("design:type", Object)
                ], SelectOptions.prototype, "dataSource", void 0);
                __decorate([
                    core_1.Input(),
                    __metadata("design:type", String)
                ], SelectOptions.prototype, "textPattern", void 0);
                SelectOptions = __decorate([
                    core_1.Component({
                        selector: "select-options",
                        templateUrl: "app/common/directives/form/selectOptions.html",
                        directives: [directive_1.FormToggle]
                    })
                ], SelectOptions);
                return SelectOptions;
                var _a;
            }(ui_1.BaseControl));
            exports_1("SelectOptions", SelectOptions);
        }
    };
});
//# sourceMappingURL=selectOptions.js.map