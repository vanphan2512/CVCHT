System.register(["angular2/core", "../../models/ui", "../../directive"], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __extends = (this && this.__extends) || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, ui_1, directive_1;
    var FormTextArea;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (ui_1_1) {
                ui_1 = ui_1_1;
            },
            function (directive_1_1) {
                directive_1 = directive_1_1;
            }],
        execute: function() {
            FormTextArea = (function (_super) {
                __extends(FormTextArea, _super);
                function FormTextArea() {
                    _super.apply(this, arguments);
                    this.labelText = String.empty;
                    this.placeHolderText = String.empty;
                    this.modelChange = new core_1.EventEmitter();
                }
                FormTextArea.prototype.onValueChanged = function (evt) {
                    this.modelChange.emit(evt.target.value);
                };
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', String)
                ], FormTextArea.prototype, "labelText", void 0);
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', String)
                ], FormTextArea.prototype, "placeHolderText", void 0);
                __decorate([
                    core_1.Input(), 
                    __metadata('design:type', Object)
                ], FormTextArea.prototype, "model", void 0);
                __decorate([
                    core_1.Output(), 
                    __metadata('design:type', Object)
                ], FormTextArea.prototype, "modelChange", void 0);
                FormTextArea = __decorate([
                    core_1.Component({
                        selector: "form-textarea",
                        templateUrl: "app/common/directives/form/formTextArea.html",
                        directives: [directive_1.ValidationDirective]
                    }), 
                    __metadata('design:paramtypes', [])
                ], FormTextArea);
                return FormTextArea;
            }(ui_1.BaseControl));
            exports_1("FormTextArea", FormTextArea);
        }
    }
});
//# sourceMappingURL=formTextArea.js.map