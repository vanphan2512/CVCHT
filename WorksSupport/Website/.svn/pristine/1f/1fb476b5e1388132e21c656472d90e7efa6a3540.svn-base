import configHelper from "../../../../common/helpers/configHelper";
import { Promise } from "../../../../common/models/promise";
let statusService = {
    getStatus: getStatus,
    getStatusBy: getStatusBy,
    create: create,
    update: update,
    delete: remove,
    get: get,
    getStatusActived: getStatusActived
};
export default statusService;
function getStatus(): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}{1}", configHelper.getAppConfig().api.baseUrl, "v2/status");
    return connector.get(url);
}

/**
 * Get all status is actived
 * 
 * @returns {Promise} 
 */
function getStatusActived(): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}{1}", configHelper.getAppConfig().api.baseUrl, "v2/status/getStatusActived");
    return connector.get(url);
}

// Search data by keyWord and isDeleleted
function getStatusBy(keyWord: any, isDelete: number, pageIndex: number, pageSize: number): Promise {
    let connector = window.ioc.resolve("IConnector");
    // cunstructer param to search.
    let keySearch = "?Keywords=" + keyWord;
    let isDel = "&IsDeleted=" + isDelete;
    let index = "&PageIndex=" + pageIndex;
    let size = "&PageSize=" + pageSize;

    let url = String.format("{0}{1}{2}{3}{4}{5}"
        , configHelper.getAppConfig().api.baseUrl
        , "v2/status/Search"
        , keySearch
        , isDel
        , index
        , size);
    return connector.get(url);
}

// Get data by id
function get(id: any): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}v2/status/{1}", configHelper.getAppConfig().api.baseUrl, id);
    return connector.get(url);
}

// Create new
function create(model: any): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}{1}", configHelper.getAppConfig().api.baseUrl,"v2/status/insertBy");
    return connector.post(url, model);
}

// Update data
function update(model: any): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}{1}",
        configHelper.getAppConfig().api.baseUrl, "v2/status/insertBy");
    return connector.post(url, model);
}

function remove(deleteModel: any): Promise {
    let connector = window.ioc.resolve("IConnector");
    let url = String.format("{0}/{1}", configHelper.getAppConfig().api.baseUrl, "v2/status/Del");
    return connector.post(url, deleteModel);
}