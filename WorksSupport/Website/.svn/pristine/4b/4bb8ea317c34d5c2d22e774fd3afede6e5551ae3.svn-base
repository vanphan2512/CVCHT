System.register(["../../../../common/helpers/configHelper"], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var configHelper_1;
    var prioritiesService;
    function getPrioritiesAll() {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities");
        return connector.get(url);
    }
    function getPriorities(keywords, isDeleted, pageIndex, pageSize) {
        var connector = window.ioc.resolve("IConnector");
        var key = "?Keywords=" + keywords;
        var isDel = "&IsDeleted=" + isDeleted;
        var page = "&PageIndex=" + pageIndex;
        var size = "&PageSize=" + pageSize;
        var url = String.format("{0}{1}{2}{3}{4}{5}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities/SearchKey", key, isDel, page, size);
        return connector.get(url);
    }
    function get(id) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}/{2}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities", id);
        return connector.get(url);
    }
    function create(priority) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}", configHelper_1.default.getAppConfig().api.baseUrl);
        return connector.post(url, priority);
    }
    function update(model) {
        debugger;
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities/insertBy");
        return connector.post(url, model);
    }
    function remove(deletedModel) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}/{1}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities/Del");
        return connector.post(url, deletedModel);
    }
    // Get by status 1:Deleted/ 0: Avaliable
    function getPrioritiesByIsDelete(status) {
        var connector = window.ioc.resolve("IConnector");
        var url = String.format("{0}{1}/{2}", configHelper_1.default.getAppConfig().api.baseUrl, "v1/priorities", status);
        return connector.get(url);
    }
    return {
        setters:[
            function (configHelper_1_1) {
                configHelper_1 = configHelper_1_1;
            }],
        execute: function() {
            prioritiesService = {
                getPriorities: getPriorities,
                getPrioritiesAll: getPrioritiesAll,
                getPrioritiesByIsDelete: getPrioritiesByIsDelete,
                create: create,
                update: update,
                delete: remove,
                get: get
            };
            exports_1("default",prioritiesService);
        }
    }
});
//# sourceMappingURL=priorityService.js.map